name: 'Deploy Chart'
description: 'Deploy Chart'
inputs:
  KUBECTL_CONFIG:
    description: ""
    required: true
  VALUES_FILE_NAME:
    description: ""
    required: true
  # MICROSERVICE:
  #   description: ""
  #  required: true
  URL_FILESHARE:
    description: ""
    required: true
  USERNAME_FILESHARE:
    description: ""
    required: true
  RSA-KEY_FILESHARE:
    description: ""
    required: true
  CHART_REPO:
    description: ""
    required: true
  DEPLOYMENT_NAME:
    description: "Name of the Helm deployment."
    required: true
  DEPLOYMENT_NAMESPACE:
    description: ""
    default: "default"

runs:
  using: "composite"
  steps:
    # Download Secure-File
    - name: base64-to-file
      id: write_file
      uses: timheuer/base64-to-file@v1.1
      with:
        fileName: "custom-config"
        encodedString: ${{ inputs.KUBECTL_CONFIG }}

    - name: Get Values File
      shell: bash
      run: |
        scp -P 23 -i ${{ steps.write_file.outputs.filePath }} -o "StrictHostKeyChecking no" ${{ inputs.USERNAME_FILESHARE }}@${{ inputs.URL_FILESHARE }}:${{ inputs.VALUES_FILE_NAME }} ./Values.yml


    # Checkout
    - uses: actions/checkout@v3

    - name: Clone Chart-Repository
      shell: bash
      run: git clone 

    - name: Git Clone Action
      uses: sudosubin/git-clone-action@v1.0.1
      with:
        # Repository owner and name. Ex: sudosubin/git-clone-action
        repository: ${{inputs.CHART_REPO}}

    - name: list Files
      shell: bash
      run: ls

    # Deploy to Kubernetes
    - name: Helm Upgrade
      shell: bash
      run: echo helm upgrade ${{ inputs.DEPLOYMENT_NAME}} . --values ./Values.yml --kubeconfig ${{ steps.write_file.outputs.filePath }} -n ${{ inputs.DEPLOYMENT_NAMESPACE }}