name: 'Update Helm Values'
description: 'Update Helm Values'
inputs:
  VALUES_FILE_NAME:
    description: "Name of the ValuesFile on the Server"
    required: true
  VALUE_NAME:
    description: "Name of the Value in the Values.yml"
    required: true
  NEW_VALUE:
    description: "The new Value that should be set."
    required: true
  URL_FILESHARE:
    description: "The URL of the File-Share"
    required: true
  USERNAME_FILESHARE:
    description: "the Username of the File-share"
    required: true
  RSA-KEY_FILESHARE:
    description: "The RSA-Key for the File-Share"
    required: true

runs:
  using: "composite"
  steps:
    # Checkout
    - uses: actions/checkout@v3

    - name: base64-to-file
      id: write_file
      uses: timheuer/base64-to-file@v1.1
      with:
        fileName: "id_rsa"
        encodedString: ${{ inputs.RSA-KEY_FILESHARE }}

    - name: Set Key Protections
      shell: bash
      run: chmod 600 ${{ steps.write_file.outputs.filePath }}

    - name: Get Actual File
      shell: bash
      run: |
        scp -P 23 -i ${{ steps.write_file.outputs.filePath }} -o "StrictHostKeyChecking no" ${{ inputs.USERNAME_FILESHARE }}@${{ inputs.URL_FILESHARE }}:${{ inputs.VALUES_FILE_NAME }} ./newValues.yml

    - name: list Files
      shell: bash
      run: ls

    - name: Replace Value in YAML
      id: yaml-action
      uses: teunmooij/yaml@v1
      with:
        from-file: './newValues.yml'
        to-file: 'newValues.yml'
        merge: '{ "${{ inputs.VALUE_NAME }}": "${{ inputs.NEW_VALUE }}" }'
    
    - name: view new Yaml
      shell: bash
      run: cat ./newValues.yml

    - name: Check and Lock Remote-File
      shell: bash
      run: | 
        ssh -p23 -i ${{steps.write_file.outputs.filePath}} ${{inputs.USERNAME_FILESHARE}}@${{inputs.URL_FILESHARE}} |
        #!/bin/bash
        filename="${{inputs.VALUES_FILE_NAME}}.lock"
        max_attempts=3
        attempt=1

        # Überprüfe, ob die Datei existiert
        while [ -f "$filename" ]; do
            if [ $attempt -gt $max_attempts ]; then
                echo "Maximale Anzahl an Versuchen erreicht. Lock Datei immernoch vorhanden."
                exit 1
            fi

            echo "Datei nicht gefunden. Versuch Nr. $attempt."

            # Warte eine zufällige Zeit (1-10 Sekunden) und inkrementiere den Versuchszähler
            sleep $((1 + RANDOM % 10))
            attempt=$((attempt + 1))
        done
        touch ${{inputs.VALUES_FILE_NAME}}.lock

    - name: Update Remote File
      shell: bash
      run: |
        scp -P 23 -i ${{ steps.write_file.outputs.filePath }} -o "StrictHostKeyChecking no" ./newValues.yml ${{ inputs.USERNAME_FILESHARE }}@${{ inputs.URL_FILESHARE }}:${{ inputs.VALUES_FILE_NAME }}

    # - name: Remove Lock-File
    #   shell: bash
    #   run: ssh -p23 -i ${{ steps.write_file.outputs.filePath }}@${{ inputs.URL_FILESHARE }} rm -r ${{ inputs.VALUES_FILE_NAME }}.lock